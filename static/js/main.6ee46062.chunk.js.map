{"version":3,"sources":["assets/images/marvel_bg.jpg","screens/login/styles.js","assets/images/marvel_icon.png","services/hooks/useAuth.js","redux/user/userSlice.js","assets/images/universo-marvel.jpg","screens/login/index.js","screens/login/hooks.js","redux/comic/comicSlice.js","screens/home/styles.js","services/api/index.js","services/hooks/useLazyFetch.js","components/UI/Text/index.js","components/Navbar/styles.js","components/Navbar/index.js","components/Home/ComicCard/styles.js","components/Home/ComicCard/index.js","screens/home/index.js","screens/home/hooks.js","screens/comicDetail/styles.js","screens/comicDetail/index.js","theme/dark.js","App.js","app/store.js","index.js"],"names":["fadeIn","keyframes","Container","styled","div","props","theme","colors","primary","BG","LogoWrapper","Comic","span","GitHubButton","button","secondary_dark","primary_dark","GHIcon","FaGithub","attrs","size","authWithGitHub","a","provider","firebase","auth","GithubAuthProvider","addScope","signInWithPopup","result","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","userSlice","createSlice","name","initialState","isLogged","userEmail","userName","avatarUrl","reducers","logIn","state","logOut","setUserEmail","action","payload","setUserName","setAvatarUrl","actions","logged","user","Login","handleAuth","dispatch","useDispatch","localStorage","setItem","credential","token","email","displayName","photoURL","useLogin","src","Marvel","height","onClick","className","comicSlice","comicsList","value","selectedComic","increment","decrement","incrementByAmount","setList","setSelectedComic","selectCount","comic","white","LoadSpan","instance","axios","create","baseURL","config","useState","loading","setLoading","data","setData","error","setError","fetch","useCallback","options","API","request","response","TextStyled","type","color","weight","uppercase","Wrapper","UserInfoWrapper","dropDown","dropUp","AvatarWrapper","Avatar","img","LogoutIcon","IoIosLogOut","Title","Text","SubTitle","MarvelIcon","Navbar","getItem","removeItem","title","secondary","ComicCard","uri","setComic","to","style","display","alignItems","justifyContent","flexDirection","textDecoration","width","alt","useSelector","useLazyFetch","url","method","searchComics","getComics","results","console","log","useHome","useEffect","length","Grid","container","spacing","map","item","index","xs","sm","md","thumbnail","path","ReturnWrapper","ImageWrapper","InfoWrapper","SmallTitle","ReturnIcon","AiFillCaretLeft","ComicDetail","flex","description","characters","available","items","primary_light","primary_sub","App","Dark","currentTheme","exact","component","Home","store","configureStore","reducer","counterReducer","userReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,MAA0B,sCCInCA,EAASC,YAAH,2FAUCC,EAAYC,IAAOC,IAAV,8bAEN,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,UAM/BR,EAOLS,GAMGC,EAAcP,IAAOC,IAAV,gGAMXO,EAAQR,IAAOS,KAAV,wMAULC,EAAeV,IAAOW,OAAV,4fAeP,SAACT,GAAD,OAAWA,EAAMC,MAAMC,OAAOQ,kBAWnC,SAACV,GAAD,OAAWA,EAAMC,MAAMC,OAAOS,gBAO9BC,EAASd,YAAOe,KAAUC,OAAM,iBAAO,CAClDC,KAAM,MADcjB,CAAH,0BCpFJ,MAA0B,wC,gDCc1BkB,I,2EAAf,8BAAAC,EAAA,6DACQC,EAAW,IAAIC,IAASC,KAAKC,oBAC1BC,SAAS,QAClBJ,EAASI,SAAS,QAClBJ,EAASI,SAAS,cAJpB,SAMuBH,IAASC,OAAOG,gBAAgBL,GANvD,cAMQM,EANR,yBAQSA,GART,4C,sBAFAL,IAASM,cATc,CACrBC,OAAQC,0CACRC,WAAYD,sCACZE,UAAWF,sBACXG,cAAeH,kCACfI,kBAAmBJ,eACnBK,MAAOL,8CAgBMR,EAAf,EAAeA,I,kFChBFc,GAAYC,aAAY,CACnCC,KAAM,OACNC,aATmB,CACnBC,UAAU,EACVC,UAAW,GACXC,SAAU,GACVC,UAAW,IAMXC,SAAU,CACRC,MAAO,SAACC,GACNA,EAAMN,UAAW,GAEnBO,OAAQ,SAACD,GACPA,EAAMN,UAAW,GAEnBQ,aAAc,SAACF,EAAOG,GACpBH,EAAML,UAAYQ,EAAOC,SAE3BC,YAAa,SAACL,EAAOG,GACnBH,EAAMJ,SAAWO,EAAOC,SAE1BE,aAAc,SAACN,EAAOG,GACpBH,EAAMH,UAAYM,EAAOC,Y,GAW3Bd,GAAUiB,QALZR,G,GAAAA,MACAE,G,GAAAA,OACAC,G,GAAAA,aACAG,G,GAAAA,YACAC,G,GAAAA,aAGWE,GAAS,SAACR,GAAD,OAAWA,EAAMS,KAAKf,UAK7BJ,MAAf,Q,IC5Ce,I,MCwBAoB,GAlBD,WAAO,IACXC,ECEK,WACb,IAAMC,EAAWC,eAcjB,MAAO,CAAEF,WAZO,uCAAG,4BAAArC,EAAA,sEACID,IADJ,OACXQ,EADW,OAEjBiC,aAAaC,QAAQ,cAAelC,EAAOmC,WAAWC,OACtDH,aAAaC,QAAQ,YAAalC,EAAO4B,KAAKS,OAC9CJ,aAAaC,QAAQ,WAAYlC,EAAO4B,KAAKU,aAC7CL,aAAaC,QAAQ,aAAclC,EAAO4B,KAAKW,UAC/CR,EAASb,MACTa,EAASV,GAAarB,EAAO4B,KAAKS,QAClCN,EAASP,GAAYxB,EAAO4B,KAAKU,cACjCP,EAASN,GAAazB,EAAO4B,KAAKW,WATjB,4CAAH,sDDLOC,GAAfV,WAER,OACE,gBAACzD,EAAD,WACE,gBAACQ,EAAD,WACE,sBAAK4D,IAAKC,EAAQC,OAAQ,MAC1B,eAAC7D,EAAD,wBAGF,gBAACE,EAAD,CAAc4D,QAAS,kBAAMd,KAA7B,UACE,eAAC1C,EAAD,CAAQyD,UAAU,YAClB,uBAAMA,UAAU,SAAhB,uC,oBEuBKC,GAAapC,aAAY,CACpCC,KAAM,QACNC,aARmB,CACnBmC,WAAY,GACZC,MAAO,EACPC,cAAe,IAMfhC,SAAU,CACRiC,UAAW,SAAC/B,GACVA,EAAM6B,OAAS,GAGjBG,UAAW,SAAChC,GACVA,EAAM6B,OAAS,GAEjBI,kBAAmB,SAACjC,EAAOG,GACzBH,EAAM6B,OAAS1B,EAAOC,SAExB8B,QAAS,SAAClC,EAAOG,GACfH,EAAM4B,WAAazB,EAAOC,SAE5B+B,iBAAkB,SAACnC,EAAOG,GACxBH,EAAM8B,cAAgB3B,EAAOC,Y,GAW/BuB,GAAWpB,QAFb2B,I,GAHAH,U,GACAC,U,GACAC,kB,GACAC,SACAC,G,GAAAA,iBAGWC,GAAc,SAACpC,GAAD,OAAWA,EAAMqC,MAAMT,YACrCE,GAAgB,SAAC9B,GAAD,OAAWA,EAAMqC,MAAMP,eAErCH,MAAf,QCzEM3E,GAASC,YAAH,2FAUCC,GAAYC,IAAOC,IAAV,mNACN,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAO+E,QAQ/BtF,IAGFuF,GAAWpF,IAAOS,KAAV,sE,kBCJN4E,G,QAlBEC,EAAMC,OAAO,CAC5BC,QAAS,yCCAI,cAAkB,IAAjBC,EAAgB,uDAAP,GAAO,EACAC,oBAAS,GADT,mBACvBC,EADuB,KACdC,EADc,OAENF,mBAAS,MAFH,mBAEvBG,EAFuB,KAEjBC,EAFiB,OAGJJ,mBAAS,MAHL,mBAGvBK,EAHuB,KAGhBC,EAHgB,KAKxBC,EAAQC,sBAAW,sBACvB,0CAAA/E,EAAA,6DAAOgF,EAAP,+BAAiB,GAAjB,SAEIP,GAAW,GACXE,EAAQ,MAHZ,SAK2BM,GAAIC,QAAJ,6BAAiBZ,GAAWU,IALvD,cAKUG,EALV,OAMIV,GAAW,GACXE,EAAQQ,EAAST,MAPrB,kBASWS,EAAST,MATpB,kCAWID,GAAW,GACXI,EAAS,EAAD,IAZZ,0DAeA,CAACP,IAGH,MAAO,CACLQ,EACA,CACEN,UACAE,OACAE,W,mBCYSQ,GA1CIvG,IAAOS,KAAV,6FACD,SAACP,GACZ,OAAQA,EAAMsG,MACZ,IAAK,MACH,OAAO,GACT,IAAK,MACH,OAAO,GACT,IAAK,SACH,OAAO,GACT,IAAK,QACH,OAAO,GACT,IAAK,OACH,OAAO,GACT,QACE,OAAO,OAGJ,SAACtG,GAAD,OAAWA,EAAMuG,OAAS,aACpB,SAACvG,GACd,OAAQA,EAAMwG,QACZ,IAAK,OACH,MAAO,OACT,IAAK,QACH,OAAO,IACT,IAAK,SACH,OAAO,IACT,IAAK,OACH,OAAO,IACT,IAAK,QACH,OAAO,IACT,IAAK,OACH,OAAO,IACT,IAAK,OACH,OAAO,IACT,QACE,OAAO,QAGX,SAACxG,GAAD,OAAWA,EAAMyG,WAAa,+BCpC5B9G,GAASC,YAAH,2FAUC8G,GAAU5G,IAAOC,IAAV,iMAKJ,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,UAE/BR,IAGFU,GAAcP,IAAOC,IAAV,gGAKXO,GAAQR,IAAOS,KAAV,uMAWLV,GAAYC,IAAOC,IAAV,8FAKT4G,GAAkB7G,IAAOC,IAAV,iIAOtB6G,GAAWhH,YAAH,4FASRiH,GAASjH,YAAH,mIAYCkH,GAAgBhH,IAAOC,IAAV,quBAkBP6G,GAiBAC,IAMNE,GAASjH,IAAOkH,IAAV,wGAONC,GAAanH,YAAOoH,MAAapG,OAAM,iBAAO,CACzDC,KAAM,GACNwF,MAAO,WAFiBzG,CAAH,qEAQVqH,GAAQrH,YAAOsH,IAAMtG,OAAM,iBAAO,CAC7CwF,KAAM,SACNC,MAAO,QACPC,OAAQ,WAHW1G,CAAH,oDAOLuH,GAAWvH,YAAOsH,IAAMtG,OAAM,iBAAO,CAChDwF,KAAM,QACNC,MAAO,WAFezG,CAAH,0BAKRwH,GAAaxH,IAAOkH,IAAV,8CC7FRO,GA9BA,WACb,IAAMhE,EAAWC,eACjB,OACE,gBAACkD,GAAD,WACE,gBAAC,GAAD,WACE,eAACY,GAAD,CAAYrD,IAAKC,IACjB,eAAC,GAAD,wBAEF,gBAAC,GAAD,WACE,gBAACyC,GAAD,WACE,eAACQ,GAAD,UAAQ1D,aAAa+D,QAAQ,cAC7B,eAACH,GAAD,UAAW5D,aAAa+D,QAAQ,kBAElC,gBAACV,GAAD,WACE,eAACC,GAAD,CAAQ9C,IAAKR,aAAa+D,QAAQ,gBAClC,uBACEnD,UAAU,OACVD,QAAS,kBACPb,EAASX,MAAWa,aAAagE,WAAW,gBAHhD,UAME,yCACA,eAACR,GAAD,CAAYS,MAAM,SAASrD,UAAU,4BCrCpCqC,GAAU5G,IAAOW,OAAV,gYAkBP0G,GAAQrH,YAAOsH,IAAMtG,OAAM,SAACd,GAAD,MAAY,CAClDsG,KAAM,MACNE,OAAQ,SACRD,MAAOvG,EAAMC,MAAMC,OAAOyH,aAHP7H,CAAH,kH,SCGH8H,GApBG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,IAAKH,EAAsB,EAAtBA,MAAOI,EAAe,EAAfA,SAC/B,OACE,eAAC,KAAD,CACEC,GAAG,UACHC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,aAChBC,cAAe,MACfC,eAAgB,OAChBC,MAAO,QARX,SAWE,gBAAC,GAAD,CAASlE,QAAS,kBAAM0D,KAAxB,UACE,sBAAKS,IAAI,QAAQtE,IAAK4D,EAAKG,MAAO,CAAEM,MAAO,IAAKnE,OAAQ,OACxD,eAAC,GAAD,UAAQuD,UCoDDrE,GA7DD,WACZ,IAAM2B,EAAQwD,aAAYzD,IACpBxB,EAAWC,eAFC,ECLL,WACb,IAAMD,EAAWC,eADE,EAEwBiF,GAAa,CACtDC,IAAI,iCAAD,OAAmC/G,mCAAnC,iBAAgFA,oCACnFgH,OAAQ,QAJS,mBAEZC,EAFY,YAEInD,EAFJ,EAEIA,QAASI,EAFb,EAEaA,MAiBhC,MAAO,CAAEgD,UAZS7C,sBAAW,sBAAC,4BAAA/E,EAAA,+EAEP2H,IAFO,QAEpBjD,EAFoB,SAKxBpC,EAASsB,GAAQc,EAAKA,KAAKmD,UALH,gDAQ1BC,QAAQC,IAAR,MAR0B,yDAU3B,IAEiBvD,UAASI,SDXSoD,GAA9BJ,EAHU,EAGVA,UAAWpD,EAHD,EAGCA,QAASI,EAHV,EAGUA,MAY5B,OAVAqD,qBAAU,WACa,IAAjBlE,EAAMmE,QACRN,MAED,IAOD,eAAC,GAAD,UACE,gBAACO,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTtB,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBG,MAAO,QAPX,UAUGzC,GAAS,sEACTJ,GACC,uCACE,eAACP,GAAD,gCACA,eAAC,KAAD,CAAQoB,KAAK,OAAOC,MAAM,UAAUpC,OAAQ,GAAImE,MAAO,SAGzD7C,GACAT,IAAU,IACVA,EAAMuE,KAAI,SAACC,EAAMC,GAAP,OACR,eAACL,GAAA,EAAD,CACEI,MAAI,EACJE,GAAI,GACJC,GAAI,GACJC,GAAI,EACJ5B,MAAO,CACLC,QAAS,OACTG,cAAe,SACfF,WAAY,UARhB,SAYE,eAAC,GAAD,CACER,MAAO8B,EAAK9B,MACZG,IAAK2B,EAAKK,UAAUC,KAAO,uBAC3BhC,SAAU,kBAzCxB,SAAkB0B,GAChBjG,EAASuB,GAAiB0E,IAwCE1B,CAAS0B,OALtBC,Y,SErDb9J,GAASC,YAAH,2FASC8G,GAAU5G,IAAOC,IAAV,mNACJ,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAO+E,QAQ/BtF,IAGFoK,GAAgBjK,IAAOC,IAAV,yJAUbiK,GAAelK,IAAOC,IAAV,uLAWZkK,GAAcnK,IAAOC,IAAV,oIAQXoH,GAAQrH,YAAOsH,IAAMtG,OAAM,iBAAO,CAC7CwF,KAAM,MACNE,OAAQ,QACRD,MAAO,UAHYzG,CAAH,4DAQLuH,GAAWvH,YAAOsH,IAAMtG,OAAM,iBAAO,CAChDwF,KAAM,SACNE,OAAQ,SACRD,MAAO,UAHezG,CAAH,4BAKRoK,GAAapK,YAAOsH,IAAMtG,OAAM,iBAAO,CAClDwF,KAAM,OACNE,OAAQ,SACRD,MAAO,UAHiBzG,CAAH,4BAMVqK,GAAarK,YAAOsK,MAAiBtJ,OAAM,iBAAO,CAC7DyF,MAAO,UADiBzG,CAAH,4BCdRuK,GA3CK,WAClB,IAAMrF,EAAQwD,aAAY/D,IACTjB,eAEjB,OACE,gBAAC,GAAD,WACE,gBAACuG,GAAD,WACE,eAACI,GAAD,IACA,eAAC,KAAD,CAAMpC,GAAG,IAAT,SACE,eAAC,GAAD,4BAGJ,gBAACqB,GAAA,EAAD,CACEC,WAAS,EACTrB,MAAO,CAAEC,QAAS,OAAQG,cAAe,MAAOkC,KAAM,GAFxD,UAIE,eAAClB,GAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,eAACI,GAAD,UACE,sBAAK/F,IAAKe,EAAM6E,UAAUC,KAAO,8BAIrC,eAACV,GAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,gBAACK,GAAD,WACE,gBAAC,GAAD,eAASjF,EAAM0C,SACf,wBAEA,eAAC,GAAD,UAAW1C,EAAMuF,cACjB,wBACCvF,EAAMwF,WAAWC,UAAY,GAC5B,iCACE,eAAC,GAAD,2BACCzF,EAAMwF,WAAWE,MAAMnB,KAAI,SAACC,EAAMC,GAAP,OAC1B,gBAACS,GAAD,eAA0BV,EAAKrH,OAAdsH,qBCrCpBxJ,I,OAZD,CACZC,OAAQ,CACNC,QAAS,UACTQ,aAAc,OACdgK,cAAe,UACfC,YAAa,UACbjD,UAAW,OACXjH,eAAgB,UAChBuE,MAAO,U,QCqCI4F,OAlCf,WACE,IAAMxI,EAAWmG,aAAYrF,IAEvBI,EAAWC,eAHJ,EAK2BgC,mBAASsF,IALpC,mBAKNC,EALM,KAcb,OAda,KAOb7B,qBAAU,WACIzF,aAAa+D,QAAQ,gBAE/BjE,EAASb,QAEV,IAGD,eAAC,IAAD,CAAezC,MAAO8K,EAAtB,SACE,uBAAK1G,UAAU,MAAf,WACIhC,GAAY,eAAC,GAAD,IACbA,GACC,uBAAKgC,UAAU,YAAf,UACE,eAAC,GAAD,IACA,eAAC,KAAD,UACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOyF,KAAK,IAAIkB,OAAK,EAACC,UAAWC,KACjC,eAAC,KAAD,CAAOpB,KAAK,UAAUmB,UAAWZ,mBC/BpCc,GAAQC,aAAe,CAClCC,QAAS,CACPrG,MAAOsG,GACPlI,KAAMmI,MCDVC,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,KAAD,CAAUP,MAAOA,GAAjB,SACE,eAAC,GAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.6ee46062.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/marvel_bg.9f598ce3.jpg\";","import { FaGithub } from \"react-icons/fa\";\nimport styled, { keyframes } from \"styled-components\";\nimport BG from \"../../assets/images/marvel_bg.jpg\";\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity:1;\n  }\n`;\n\nexport const Container = styled.div`\n  height: 100%;\n  background: ${(props) => props.theme.colors.primary};\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n  animation: ${fadeIn} 1s;\n  background-image: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.5) 0%,\n      rgba(166, 166, 166, 0.8) 50%,\n      rgba(237, 232, 232, 0.5) 98%\n    ),\n    url(${BG});\n\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const LogoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const Comic = styled.span`\n  color: yellow;\n  position: absolute;\n  top: 180px;\n  transform: rotate(-25deg);\n  right: -50px;\n  font-family: \"Zen Dots\";\n  font-size: 30px;\n  font-weight: 700;\n`;\nexport const GitHubButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  height: 70px;\n  width: 300px;\n  background: #fff;\n  border-radius: 10px;\n  outline: none;\n  border-width: 0px;\n  align-items: center;\n  transition: 0.2s;\n\n  &:hover {\n    cursor: pointer;\n    background: ${(props) => props.theme.colors.secondary_dark};\n\n    .ghLink {\n      color: #000;\n    }\n    .gh-icon {\n      color: #000;\n    }\n  }\n\n  .ghLink {\n    color: ${(props) => props.theme.colors.primary_dark};\n\n    text-decoration: none;\n    font-size: 16px;\n  }\n`;\n\nexport const GHIcon = styled(FaGithub).attrs(() => ({\n  size: 30,\n}))``;\n","export default __webpack_public_path__ + \"static/media/marvel_icon.4c945f28.png\";","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nasync function authWithGitHub() {\n  const provider = new firebase.auth.GithubAuthProvider();\n  provider.addScope(\"repo\");\n  provider.addScope(\"name\");\n  provider.addScope(\"user:email\");\n\n  const result = await firebase.auth().signInWithPopup(provider);\n\n  return result;\n}\n\nexport default firebase;\nexport { authWithGitHub };\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLogged: false,\n  userEmail: \"\",\n  userName: \"\",\n  avatarUrl: \"\",\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logIn: (state) => {\n      state.isLogged = true;\n    },\n    logOut: (state) => {\n      state.isLogged = false;\n    },\n    setUserEmail: (state, action) => {\n      state.userEmail = action.payload;\n    },\n    setUserName: (state, action) => {\n      state.userName = action.payload;\n    },\n    setAvatarUrl: (state, action) => {\n      state.avatarUrl = action.payload;\n    },\n  },\n});\n\nexport const {\n  logIn,\n  logOut,\n  setUserEmail,\n  setUserName,\n  setAvatarUrl,\n} = userSlice.actions;\n\nexport const logged = (state) => state.user.isLogged;\nexport const email = (state) => state.user.userEmail;\nexport const name = (state) => state.user.userName;\nexport const avatar = (state) => state.user.avatarUrl;\n\nexport default userSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/universo-marvel.09fa3d18.jpg\";","import React from \"react\";\nimport { Container, GitHubButton, GHIcon, LogoWrapper, Comic } from \"./styles\";\nimport Marvel from \"../../assets/images/marvel_icon.png\";\nimport useLogin from \"./hooks\";\nimport BG from \"../../assets/images/universo-marvel.jpg\";\n\nconst Login = () => {\n  const { handleAuth } = useLogin();\n\n  return (\n    <Container>\n      <LogoWrapper>\n        <img src={Marvel} height={300} />\n        <Comic>COMICS</Comic>\n      </LogoWrapper>\n\n      <GitHubButton onClick={() => handleAuth()}>\n        <GHIcon className=\"gh-icon\" />\n        <span className=\"ghLink\"> Login with GitHub</span>\n      </GitHubButton>\n    </Container>\n  );\n};\n\nexport default Login;\n","import { authWithGitHub } from \"../../services/hooks/useAuth\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  logIn,\n  setUserEmail,\n  setUserName,\n  setAvatarUrl,\n} from \"../../redux/user/userSlice\";\n\nexport default () => {\n  const dispatch = useDispatch();\n\n  const handleAuth = async () => {\n    const result = await authWithGitHub();\n    localStorage.setItem(\"accessToken\", result.credential.token);\n    localStorage.setItem(\"userEmail\", result.user.email);\n    localStorage.setItem(\"userName\", result.user.displayName);\n    localStorage.setItem(\"userAvatar\", result.user.photoURL);\n    dispatch(logIn());\n    dispatch(setUserEmail(result.user.email));\n    dispatch(setUserName(result.user.displayName));\n    dispatch(setAvatarUrl(result.user.photoURL));\n  };\n\n  return { handleAuth };\n};\n","// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// import { fetchCount } from \"./counterAPI\";\n\n// const initialState = {\n//   value: 0,\n//   status: \"idle\",\n// };\n\n// export const comicSlice = createSlice({\n//   name: \"counter\",\n//   initialState,\n//   reducers: {\n//     increment: (state) => {\n//       state.value += 1;\n//     },\n//     decrement: (state) => {\n//       state.value -= 1;\n//     },\n//     incrementByAmount: (state, action) => {\n//       state.value += action.payload;\n//     },\n//   },\n// });\n\n// export const { increment, decrement, incrementByAmount } = comicSlice.actions;\n\n// export const selectCount = (state) => state.counter.value;\n\n// export default comicSlice.reducer;\n\n//\n//\n//\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  comicsList: [],\n  value: 2,\n  selectedComic: {},\n};\n\nexport const comicSlice = createSlice({\n  name: \"comic\",\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n    setList: (state, action) => {\n      state.comicsList = action.payload;\n    },\n    setSelectedComic: (state, action) => {\n      state.selectedComic = action.payload;\n    },\n  },\n});\n\nexport const {\n  increment,\n  decrement,\n  incrementByAmount,\n  setList,\n  setSelectedComic,\n} = comicSlice.actions;\n\nexport const selectCount = (state) => state.comic.comicsList;\nexport const selectedComic = (state) => state.comic.selectedComic;\n\nexport default comicSlice.reducer;\n","import styled, { keyframes } from \"styled-components\";\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity:1;\n  }\n`;\n\nexport const Container = styled.div`\n  background: ${(props) => props.theme.colors.white};\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  padding: 20px 10px;\n  padding-bottom: 100px;\n  animation: ${fadeIn} 1s;\n`;\n\nexport const LoadSpan = styled.span`\n  color: #ed1d24;\n  margin-right: 10px;\n`;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://gateway.marvel.com/v1/public\",\n});\n// instance.interceptors.request.use(\n//   async (config) => {\n//     const token = await getToken();\n//     if (token !== null) {\n//       config.headers.Authorization = `Bearer ${token}`;\n//     }\n\n//     config.headers[\"Content-Type\"] = \"application/json\";\n//     return config;\n//   },\n//   (error) => {\n//     Promise.reject(error);\n//   }\n// );\n\nexport default instance;\n","import { useCallback, useState } from \"react\";\nimport API from \"../api\";\n\nexport default (config = {}) => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const fetch = useCallback(\n    async (options = {}) => {\n      try {\n        setLoading(true);\n        setData(null);\n\n        const response = await API.request({ ...config, ...options });\n        setLoading(false);\n        setData(response.data);\n\n        return response.data;\n      } catch (er) {\n        setLoading(false);\n        setError(er);\n      }\n    },\n    [config]\n  );\n\n  return [\n    fetch,\n    {\n      loading,\n      data,\n      error,\n    },\n  ];\n};\n","import styled from \"styled-components\";\n\nconst TextStyled = styled.span`\n  font-size: ${(props) => {\n    switch (props.type) {\n      case \"big\":\n        return 20;\n      case \"max\":\n        return 16;\n      case \"medium\":\n        return 14;\n      case \"small\":\n        return 12;\n      case \"tiny\":\n        return 10;\n      default:\n        return 14;\n    }\n  }}px;\n  color: ${(props) => props.color || \"#1F253C\"};\n  font-weight: ${(props) => {\n    switch (props.weight) {\n      case \"bold\":\n        return \"bold\";\n      case \"heavy\":\n        return 700;\n      case \"medium\":\n        return 600;\n      case \"book\":\n        return 500;\n      case \"light\":\n        return 400;\n      case \"tiny\":\n        return 100;\n      case \"semi\":\n        return 600;\n      default:\n        return 400;\n    }\n  }};\n  ${(props) => props.uppercase && \"text-transform: uppercase\"};\n`;\n// ${(props) => props.letterSpace && 'letter-spacing: 1px;'};\n\nexport default TextStyled;\n","import styled, { keyframes } from \"styled-components\";\nimport { IoIosLogOut } from \"react-icons/io\";\nimport { Text } from \"../UI\";\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity:1;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: ${(props) => props.theme.colors.primary};\n  padding: 0px 20px 0 20px;\n  animation: ${fadeIn} 1s;\n`;\n\nexport const LogoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\nexport const Comic = styled.span`\n  color: yellow;\n  position: absolute;\n  top: 60px;\n  transform: rotate(-25deg);\n  right: -10px;\n  font-family: \"Zen Dots\";\n  font-size: 10px;\n  font-weight: 700;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nexport const UserInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: flex-end;\n`;\n\nconst dropDown = keyframes`\n  from {\n    height: 0;\n  }\n\n  to {\n    height:50px;\n  }\n`;\nconst dropUp = keyframes`\n  from {\n    height: 50px;\n    display:block;\n  }\n\n  to {\n    height:0;\n    display:none;\n  }\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n\n  .drop {\n    position: absolute;\n    background-color: white;\n    min-width: 160px;\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.5);\n    padding: 12px 16px;\n    z-index: 1;\n    right: 10px;\n    transition: 1s;\n    display: none;\n  }\n\n  &:hover {\n    .drop {\n      animation: ${dropDown} 1s;\n      height: 50px;\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .drop:hover {\n      background: red;\n      cursor: pointer;\n      color: white;\n      font-weight: 700;\n    }\n  }\n  &:not(:hover) {\n    .drop {\n      animation: ${dropUp} 1s;\n      height: 0;\n    }\n  }\n`;\n\nexport const Avatar = styled.img`\n  height: 50px;\n  width: 50px;\n  border-radius: 25px;\n  margin: 0 10px;\n`;\n\nexport const LogoutIcon = styled(IoIosLogOut).attrs(() => ({\n  size: 30,\n  color: \"white\",\n}))`\n  cursor: pointer;\n  transition: 0.2s;\n`;\n\nexport const Title = styled(Text).attrs(() => ({\n  type: \"medium\",\n  color: \"white\",\n  weight: \"heavy\",\n}))`\n  letter-spacing: 2px;\n`;\nexport const SubTitle = styled(Text).attrs(() => ({\n  type: \"small\",\n  color: \"white\",\n}))``;\n\nexport const MarvelIcon = styled.img`\n  height: 100px;\n`;\n","import React from \"react\";\nimport { logOut } from \"../../redux/user/userSlice\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Wrapper,\n  UserInfoWrapper,\n  Avatar,\n  LogoutIcon,\n  Title,\n  SubTitle,\n  MarvelIcon,\n  Container,\n  Comic,\n  LogoWrapper,\n  AvatarWrapper,\n} from \"./styles\";\nimport Marvel from \"../../assets/images/marvel_icon.png\";\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  return (\n    <Wrapper>\n      <LogoWrapper>\n        <MarvelIcon src={Marvel} />\n        <Comic>comics</Comic>\n      </LogoWrapper>\n      <Container>\n        <UserInfoWrapper>\n          <Title>{localStorage.getItem(\"userName\")}</Title>\n          <SubTitle>{localStorage.getItem(\"userEmail\")}</SubTitle>\n        </UserInfoWrapper>\n        <AvatarWrapper>\n          <Avatar src={localStorage.getItem(\"userAvatar\")} />\n          <div\n            className=\"drop\"\n            onClick={() => (\n              dispatch(logOut()), localStorage.removeItem(\"accessToken\")\n            )}\n          >\n            <span>Sair</span>\n            <LogoutIcon title=\"Logout\" className=\"logoutIcon\" />\n          </div>\n        </AvatarWrapper>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default Navbar;\n","import styled from \"styled-components\";\nimport { Text } from \"../../UI\";\n\nexport const Wrapper = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: flex-end;\n  border: 0px;\n  border-radius: 10px;\n  background: transparent;\n  border: 5px solid transparent;\n  transition: 0.5s;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0 3px 20px rgba(0, 0, 0, 0.7);\n  }\n`;\n\nexport const Title = styled(Text).attrs((props) => ({\n  type: \"max\",\n  weight: \"medium\",\n  color: props.theme.colors.secondary,\n}))`\n  text-decoration: none;\n  width: 200px;\n  text-align: left;\n  margin-left: 10px;\n`;\n","import React from \"react\";\nimport { Wrapper, Title } from \"./styles\";\nimport { Link } from \"react-router-dom\";\n\nconst ComicCard = ({ uri, title, setComic }) => {\n  return (\n    <Link\n      to=\"/detail\"\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        flexDirection: \"row\",\n        textDecoration: \"none\",\n        width: \"100%\",\n      }}\n    >\n      <Wrapper onClick={() => setComic()}>\n        <img alt=\"comic\" src={uri} style={{ width: 200, height: 270 }} />\n        <Title>{title}</Title>\n      </Wrapper>\n    </Link>\n  );\n};\nexport default ComicCard;\n","import React, { useEffect } from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectCount, setSelectedComic } from \"../../redux/comic/comicSlice\";\nimport { Container, LoadSpan } from \"./styles\";\nimport useHome from \"./hooks\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ComicCard } from \"../../components\";\n\nconst Login = () => {\n  const comic = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const { getComics, loading, error } = useHome();\n\n  useEffect(() => {\n    if (comic.length === 0) {\n      getComics();\n    }\n  }, []);\n\n  function setComic(item) {\n    dispatch(setSelectedComic(item));\n  }\n\n  return (\n    <Container>\n      <Grid\n        container\n        spacing={2}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          width: \"100%\",\n        }}\n      >\n        {error && <span>Erro ao carregar quadrinhos... :(</span>}\n        {loading && (\n          <>\n            <LoadSpan>Carregando comics</LoadSpan>\n            <Loader type=\"Oval\" color=\"#ed1d24\" height={40} width={40} />\n          </>\n        )}\n        {!loading &&\n          comic !== [] &&\n          comic.map((item, index) => (\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={4}\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n              key={index}\n            >\n              <ComicCard\n                title={item.title}\n                uri={item.thumbnail.path + \"/portrait_xlarge.jpg\"}\n                setComic={() => setComic(item)}\n              />\n            </Grid>\n          ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Login;\n","import { useCallback } from \"react\";\nimport { useLazyFetch } from \"../../services/hooks\";\nimport { useDispatch } from \"react-redux\";\nimport { setList } from \"../../redux/comic/comicSlice\";\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [searchComics, { loading, error }] = useLazyFetch({\n    url: `/comics?ts=1&limit=50&&apikey=${process.env.REACT_APP_MARVEL_API_KEY}&hash=${process.env.REACT_APP_MARVEL_API_HASH}`,\n    method: \"GET\",\n  });\n\n  const getComics = useCallback(async () => {\n    try {\n      const data = await searchComics();\n\n      if (data) {\n        dispatch(setList(data.data.results));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  return { getComics, loading, error };\n};\n","import styled, { keyframes } from \"styled-components\";\nimport { Text } from \"../../components/UI\";\nimport { AiFillCaretLeft } from \"react-icons/ai\";\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity:1;\n  }\n`;\nexport const Wrapper = styled.div`\n  background: ${(props) => props.theme.colors.white};\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  padding: 20px 10px;\n  padding-bottom: 100px;\n  animation: ${fadeIn} 1s;\n`;\n\nexport const ReturnWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding-bottom: 20px;\n\n  a {\n    text-decoration: none;\n  }\n`;\nexport const ImageWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  height: 100%;\n  img {\n    height: 100%;\n    width: 350px;\n  }\n`;\nexport const InfoWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 400px;\n`;\n\nexport const Title = styled(Text).attrs(() => ({\n  type: \"big\",\n  weight: \"heavy\",\n  color: \"#000\",\n}))`\n  text-transform: uppercase;\n`;\n\nexport const SubTitle = styled(Text).attrs(() => ({\n  type: \"medium\",\n  weight: \"medium\",\n  color: \"#000\",\n}))``;\nexport const SmallTitle = styled(Text).attrs(() => ({\n  type: \"tiny\",\n  weight: \"medium\",\n  color: \"#000\",\n}))``;\n\nexport const ReturnIcon = styled(AiFillCaretLeft).attrs(() => ({\n  color: \"#000\",\n}))``;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectedComic } from \"../../redux/comic/comicSlice\";\nimport {\n  Wrapper,\n  Title,\n  SubTitle,\n  InfoWrapper,\n  ImageWrapper,\n  ReturnWrapper,\n  ReturnIcon,\n  SmallTitle,\n} from \"./styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst ComicDetail = () => {\n  const comic = useSelector(selectedComic);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <ReturnWrapper>\n        <ReturnIcon />\n        <Link to=\"/\">\n          <SubTitle> Voltar </SubTitle>\n        </Link>\n      </ReturnWrapper>\n      <Grid\n        container\n        style={{ display: \"flex\", flexDirection: \"row\", flex: 1 }}\n      >\n        <Grid item xs={12} sm={6} md={6}>\n          <ImageWrapper>\n            <img src={comic.thumbnail.path + \"/portrait_uncanny.jpg\"} />\n          </ImageWrapper>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={6}>\n          <InfoWrapper>\n            <Title> {comic.title}</Title>\n            <br></br>\n\n            <SubTitle>{comic.description}</SubTitle>\n            <hr />\n            {comic.characters.available > 0 && (\n              <div>\n                <SubTitle>Characters: </SubTitle>\n                {comic.characters.items.map((item, index) => (\n                  <SmallTitle key={index}> {item.name}</SmallTitle>\n                ))}\n              </div>\n            )}\n          </InfoWrapper>\n        </Grid>\n      </Grid>\n    </Wrapper>\n  );\n};\nexport default ComicDetail;\n","const theme = {\n  colors: {\n    primary: \"#ed1d24\",\n    primary_dark: \"#000\",\n    primary_light: \"#504a4a\",\n    primary_sub: \"#D2D1D1\",\n    secondary: \"#000\",\n    secondary_dark: \"#f3d403\",\n    white: \"#fff\",\n  },\n};\n\nexport default theme;\n","import React, { useState, useEffect } from \"react\";\nimport { Login, Home, ComicDetail } from \"./screens\";\nimport \"./App.css\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Dark } from \"./theme\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport { Navbar } from \"./components\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { logged, logIn } from \"./redux/user/userSlice\";\n\nfunction App() {\n  const isLogged = useSelector(logged);\n\n  const dispatch = useDispatch();\n\n  const [currentTheme, setCurrentTheme] = useState(Dark);\n\n  useEffect(() => {\n    const tkn = localStorage.getItem(\"accessToken\");\n    if (tkn) {\n      dispatch(logIn());\n    }\n  }, []);\n\n  return (\n    <ThemeProvider theme={currentTheme}>\n      <div className=\"App\">\n        {!isLogged && <Login />}\n        {isLogged && (\n          <div className=\"container\">\n            <Navbar />\n            <HashRouter>\n              <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/detail\" component={ComicDetail} />\n              </Switch>\n            </HashRouter>\n          </div>\n        )}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../redux/comic/comicSlice\";\nimport userReducer from \"../redux/user/userSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    comic: counterReducer,\n    user: userReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}