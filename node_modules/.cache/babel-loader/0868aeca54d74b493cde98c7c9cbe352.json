{"ast":null,"code":"var _jsxFileName = \"/Users/joaoluiz/Documents/workspace/ReactJs/marvel-comics/src/features/counter/Counter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { decrement, increment, incrementByAmount, selectCount } from \"./comicSlice\";\nimport styles from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Counter() {\n  _s();\n\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(\"2\");\n  const incrementValue = Number(incrementAmount) || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Counter, \"UdgHxGQHCVyk74Fz0RUWHAaaunk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/joaoluiz/Documents/workspace/ReactJs/marvel-comics/src/features/counter/Counter.js"],"names":["React","useState","useSelector","useDispatch","decrement","increment","incrementByAmount","selectCount","styles","Counter","count","dispatch","incrementAmount","setIncrementAmount","incrementValue","Number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,iBAHF,EAIEC,WAJF,QAKO,cALP;AAMA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,QAAMC,KAAK,GAAGR,WAAW,CAACK,WAAD,CAAzB;AACA,QAAMI,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,GAAD,CAAtD;AAEA,QAAMa,cAAc,GAAGC,MAAM,CAACH,eAAD,CAAN,IAA2B,CAAlD;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD;;GAtDeH,O;UACAP,W,EACGC,W;;;KAFHM,O","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  selectCount,\n} from \"./comicSlice\";\nimport styles from \"./Counter.module.css\";\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(\"2\");\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      {/* <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}