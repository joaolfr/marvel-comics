{"version":3,"sources":["screens/login/styles.js","assets/images/marvel_icon.png","services/hooks/useAuth.js","redux/user/userSlice.js","screens/login/index.js","redux/comic/comicSlice.js","screens/home/styles.js","services/api/index.js","services/hooks/useLazyFetch.js","components/Navbar/index.js","components/Home/ComicCard/styles.js","components/Home/ComicCard/index.js","screens/home/index.js","screens/home/hooks.js","screens/comicDetail/index.js","theme/dark.js","App.js","app/store.js","index.js"],"names":["Container","styled","div","props","theme","colors","primary","GitHubButton","button","secondary","GHIcon","FaGithub","attrs","size","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","authWithGitHub","a","provider","auth","GithubAuthProvider","addScope","signInWithPopup","result","console","log","userSlice","createSlice","name","initialState","isLogged","userEmail","reducers","logIn","state","logOut","setUserEmail","action","payload","actions","logged","user","email","Login","useSelector","dispatch","useDispatch","handleAuth","credential","accessToken","localStorage","setItem","token","src","Marvel","height","onClick","className","comicSlice","comicsList","value","selectedComic","increment","decrement","incrementByAmount","setList","setSelectedComic","selectCount","comic","instance","axios","create","baseURL","config","useState","loading","setLoading","data","setData","error","setError","fetch","useCallback","options","API","request","response","Navbar","getItem","removeItem","Wrapper","ComicCard","uri","title","setComic","to","style","flex","display","alignItems","justifyContent","flexDirection","width","marvelComics","setMarvelComics","useLazyFetch","url","method","searchComics","getComics","results","useHome","useEffect","length","color","Grid","container","spacing","map","item","index","xs","sm","md","thumbnail","path","ComicDetail","characters","available","items","description","primary_dark","primary_light","primary_sub","secondary_dark","secondary_light","secondary_sub","ligth","ligth_dark","ligth_light","ligth_sub","auxiliary","auxiliary_dark","auxiliary_light","auxiliary_sub","text","placeholder","white","App","Dark","currentTheme","exact","component","Home","store","configureStore","reducer","counterReducer","userReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80b79058.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { FaGithub } from \"react-icons/fa\";\n\nexport const Container = styled.div`\n  height: 100%;\n  background: ${(props) => props.theme.colors.primary};\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const GitHubButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  height: 70px;\n  width: 300px;\n  background: #fff;\n  border-radius: 15px;\n  outline: none;\n  border-width: 0px;\n  align-items: center;\n  transition: 0.2s;\n\n  &:hover {\n    opacity: 0.8;\n    cursor: pointer;\n    background: ${(props) => props.theme.colors.secondary};\n\n    .ghLink {\n      color: #fff;\n    }\n    .gh-icon {\n      color: #fff;\n    }\n  }\n\n  .ghLink {\n    color: ${(props) => props.theme.colors.primary};\n    text-decoration: none;\n    font-size: 16px;\n  }\n`;\n\nexport const GHIcon = styled(FaGithub).attrs(() => ({\n  size: 20,\n}))``;\n","export default __webpack_public_path__ + \"static/media/marvel_icon.4c945f28.png\";","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDC3JhOROFkzuBcKfoe4COuFdIr0tR6epo\",\n  authDomain: \"marvel-comics-db691.firebaseapp.com\",\n  projectId: \"marvel-comics-db691\",\n  storageBucket: \"marvel-comics-db691.appspot.com\",\n  messagingSenderId: \"955985372749\",\n  appId: \"1:955985372749:web:b44a7db55cc5eb4fd89e04\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n\nasync function authWithGitHub() {\n  const provider = new firebase.auth.GithubAuthProvider();\n  provider.addScope(\"repo\");\n  provider.addScope(\"name\");\n  provider.addScope(\"user:email\");\n\n  const result = await firebase.auth().signInWithPopup(provider);\n\n  console.log(\"result firebase: \", result);\n\n  return result;\n  // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n  //   var token = result.credential.accessToken;\n  // The signed-in user info.\n  //   var user = result.user;\n  // ...\n}\n\nexport { authWithGitHub };\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLogged: false,\n  userEmail: \"\",\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logIn: (state) => {\n      state.isLogged = true;\n    },\n    logOut: (state) => {\n      state.isLogged = false;\n    },\n    setUserEmail: (state, action) => {\n      state.userEmail = action.payload;\n    },\n  },\n});\n\nexport const { logIn, logOut, setUserEmail } = userSlice.actions;\n\nexport const logged = (state) => state.user.isLogged;\nexport const email = (state) => state.user.userEmail;\n\nexport default userSlice.reducer;\n","import React from \"react\";\nimport { Container, GitHubButton, GHIcon } from \"./styles\";\nimport Marvel from \"../../assets/images/marvel_icon.png\";\nimport { authWithGitHub } from \"../../services/hooks/useAuth\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logIn, logged, setUserEmail } from \"../../redux/user/userSlice\";\n\nconst Login = () => {\n  const comic = useSelector(logged);\n  const dispatch = useDispatch();\n\n  const handleAuth = async () => {\n    const result = await authWithGitHub();\n    console.log(result.credential.accessToken, result.user.email);\n    localStorage.setItem(\"accessToken\", result.credential.token);\n    localStorage.setItem(\"userEmail\", result.user.email);\n    dispatch(logIn());\n    dispatch(setUserEmail(result.user.email));\n  };\n\n  return (\n    <Container>\n      <img src={Marvel} height={300} />\n      {/* <a\n        style={{ textDecoration: \"none\" }}\n        href={`https://github.com/login/oauth/authorize?scope=user&client_id=69a6191348c6dd209edb&redirect_uri=http://localhost:3000/home`}\n        // href={`https://github.com/login/oauth/authorize?scope=user&client_id=69a6191348c6dd209edb&redirect_uri=https://joaolfr.github.io/marvel-comics/`}\n      > */}\n      <GitHubButton onClick={() => handleAuth()}>\n        <GHIcon className=\"gh-icon\" />\n        <span className=\"ghLink\"> Login with GitHub</span>\n      </GitHubButton>\n      {/* </a> */}\n    </Container>\n  );\n};\n\nexport default Login;\n","// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// import { fetchCount } from \"./counterAPI\";\n\n// const initialState = {\n//   value: 0,\n//   status: \"idle\",\n// };\n\n// export const comicSlice = createSlice({\n//   name: \"counter\",\n//   initialState,\n//   reducers: {\n//     increment: (state) => {\n//       state.value += 1;\n//     },\n//     decrement: (state) => {\n//       state.value -= 1;\n//     },\n//     incrementByAmount: (state, action) => {\n//       state.value += action.payload;\n//     },\n//   },\n// });\n\n// export const { increment, decrement, incrementByAmount } = comicSlice.actions;\n\n// export const selectCount = (state) => state.counter.value;\n\n// export default comicSlice.reducer;\n\n//\n//\n//\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  comicsList: [],\n  value: 2,\n  selectedComic: {},\n};\n\nexport const comicSlice = createSlice({\n  name: \"comic\",\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n    setList: (state, action) => {\n      state.comicsList = action.payload;\n    },\n    setSelectedComic: (state, action) => {\n      state.selectedComic = action.payload;\n    },\n  },\n});\n\nexport const {\n  increment,\n  decrement,\n  incrementByAmount,\n  setList,\n  setSelectedComic,\n} = comicSlice.actions;\n\nexport const selectCount = (state) => state.comic.comicsList;\nexport const selectedComic = (state) => state.comic.selectedComic;\n\nexport default comicSlice.reducer;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100%;\n  background: ${(props) => props.theme.colors.primary};\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  padding: 10px;\n`;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://gateway.marvel.com/v1/public\",\n  // baseURL: 'https://api2.test.lavvi.app',\n});\n// instance.interceptors.request.use(\n//   async (config) => {\n//     const token = await getToken();\n//     if (token !== null) {\n//       config.headers.Authorization = `Bearer ${token}`;\n//     }\n\n//     config.headers[\"Content-Type\"] = \"application/json\";\n//     return config;\n//   },\n//   (error) => {\n//     Promise.reject(error);\n//   }\n// );\n\nexport default instance;\n","import { useCallback, useState } from \"react\";\nimport API from \"../api\";\n\nexport default (config = {}) => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  // console.log('config: ', config)\n\n  const fetch = useCallback(\n    async (options = {}) => {\n      // console.log('option : ', { ...config, ...options })\n      console.log(\"config : \", config);\n\n      try {\n        setLoading(true);\n        setData(null);\n\n        const response = await API.request({ ...config, ...options });\n        setLoading(false);\n        setData(response.data);\n        console.log(\"response: \", response.data);\n\n        return response.data;\n      } catch (er) {\n        console.log(\"erros: \", er);\n        console.log(\"erro conf: \", config);\n        setLoading(false);\n        setError(er);\n        // setError(null)\n      }\n    },\n    [config]\n  );\n\n  return [\n    fetch,\n    {\n      loading,\n      data,\n      error,\n    },\n  ];\n};\n","import React from \"react\";\nimport { logOut } from \"../../redux/user/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Navbar = ({ email }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <span>NAVBAR</span>\n      <span>{localStorage.getItem(\"userEmail\")}</span>\n      <button\n        onClick={() => (\n          dispatch(logOut()), localStorage.removeItem(\"accessToken\")\n        )}\n      >\n        Logout\n      </button>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.button`\n  height: 350px;\n  width: 200px;\n  background: white;\n  display: flex;\n  flex-direction: column;\n\n  &:hover {\n    opacity: 0.8;\n    cursor: pointer;\n  }\n`;\n","import React from \"react\";\nimport { Wrapper } from \"./styles\";\nimport { Link } from \"react-router-dom\";\n\nconst ComicCard = ({ uri, title, setComic }) => {\n  return (\n    <Wrapper onClick={() => setComic()}>\n      <Link\n        to=\"/detail\"\n        style={{\n          flex: 1,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          flexDirection: \"column\",\n        }}\n      >\n        <img src={uri} style={{ width: \"100%\" }} />\n        <span>{title}</span>\n      </Link>\n    </Wrapper>\n  );\n};\nexport default ComicCard;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectCount, setSelectedComic } from \"../../redux/comic/comicSlice\";\nimport { Container } from \"./styles\";\nimport useHome from \"./hooks\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ComicCard } from \"../../components\";\nimport { ListItemIcon } from \"@material-ui/core\";\n\nconst Login = () => {\n  const comic = useSelector(selectCount);\n  const dispatch = useDispatch();\n\n  const { getComics, loading, marvelComics } = useHome();\n\n  useEffect(() => {\n    if (comic.length === 0) {\n      getComics();\n    }\n    console.log(\"comig: \", comic);\n  }, []);\n\n  function setComic(item) {\n    dispatch(setSelectedComic(item));\n  }\n\n  return (\n    <Container>\n      <span style={{ color: \"#fff\" }}>home</span>\n      {/* <Link to=\"/login\">go login</Link> */}\n      <Grid container spacing={2}>\n        {loading && <span>carregando comics</span>}\n        {!loading &&\n          comic !== [] &&\n          comic.map((item, index) => (\n            <Grid\n              item\n              xs={12}\n              sm={6}\n              md={4}\n              style={{ display: \"flex\", flexDirection: \"column\" }}\n              key={index}\n            >\n              {/* <span style={{ color: \"#fff\" }} key={index}>\n                {item.title}\n              </span>\n              <img\n                style={{ height: 200, width: 120 }}\n                src={item.thumbnail.path + \"/portrait_xlarge.jpg\"}\n              /> */}\n              <ComicCard\n                title={item.title}\n                uri={item.thumbnail.path + \"/portrait_fantastic.jpg\"}\n                setComic={() => setComic(item)}\n              />\n            </Grid>\n          ))}\n      </Grid>\n      {/* <button onClick={() => getComics()}>search comics</button> */}\n    </Container>\n  );\n};\n\nexport default Login;\n","import { useCallback, useState } from \"react\";\nimport { useLazyFetch } from \"../../services/hooks\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setList, selectCount } from \"../../redux/comic/comicSlice\";\n// gateway.marvel.com/v1/public/comics?ts=1&apikey=2bc06882395b9339500cb01b1dfcbb6b&hash=5960290765b89d76491c34ed7f44521e\n\nexport default () => {\n  const comic = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [marvelComics, setMarvelComics] = useState([]);\n  const [searchComics, { loading, error }] = useLazyFetch({\n    url: `/comics?ts=1&apikey=2bc06882395b9339500cb01b1dfcbb6b&hash=5960290765b89d76491c34ed7f44521e`,\n    method: \"GET\",\n  });\n\n  const getComics = useCallback(async () => {\n    try {\n      const data = await searchComics();\n\n      if (data) {\n        console.log(\"dados marvel: \", data.data.results);\n        setMarvelComics(data.data.results);\n        dispatch(setList(data.data.results));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  return { getComics, loading, marvelComics };\n};\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectedComic } from \"../../redux/comic/comicSlice\";\n\nconst ComicDetail = () => {\n  const comic = useSelector(selectedComic);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(\"comic selecionado: \", comic);\n  }, []);\n  return (\n    <div>\n      <img src={comic.thumbnail.path + \"/portrait_fantastic.jpg\"} />\n      <br></br>\n      <hr />\n\n      <span>Title: {comic.title}</span>\n      <br></br>\n      {comic.characters.available > 0 && (\n        <>\n          <span>Characters: </span>\n          {comic.characters.items.map((item, index) => (\n            <span key={index}> {item.name}</span>\n          ))}\n        </>\n      )}\n      <hr />\n      <span>{comic.description}</span>\n      <Link to=\"/\">go home</Link>\n    </div>\n  );\n};\nexport default ComicDetail;\n","const theme = {\n  colors: {\n    primary: \"#031138\",\n    primary_dark: \"#1E1A1A\",\n    primary_light: \"#2E2C2C\",\n    primary_sub: \"#D2D1D1\",\n    secondary: \"#1d1d1d\",\n    secondary_dark: \"#459A77\",\n    secondary_light: \"#A2D7C1\",\n    secondary_sub: \"#D0F5E6\",\n    ligth: \"#FFFFFF\",\n    ligth_dark: \"#EFEAEE\",\n    ligth_light: \"#FFFBFE\",\n    ligth_sub: \"#EAE8E8\",\n    auxiliary: \"#f2f2f2\",\n    auxiliary_dark: \"#3B6F86\",\n    auxiliary_light: \"#66A8C5\",\n    auxiliary_sub: \"#B6DBE1\",\n    text: \"#000000\",\n    placeholder: \"#efeaee\",\n    white: \"#FFF\",\n  },\n};\n\nexport default theme;\n","import React, { useState, useEffect } from \"react\";\nimport { Login, Home, ComicDetail } from \"./screens\";\nimport \"./App.css\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Light, Dark } from \"./theme\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Navbar } from \"./components\";\n// import { useAuth } from \"./services/hooks\";\nimport { authWithGitHub } from \"./services/hooks/useAuth\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { logged, email, logOut, logIn } from \"./redux/user/userSlice\";\n\nfunction App() {\n  const isLogged = useSelector(logged);\n  const userEmail = useSelector(email);\n  const dispatch = useDispatch();\n\n  // const [isLogged, setIsLogged] = useState(false);\n  const [currentTheme, setCurrentTheme] = useState(Dark);\n  // const { getUserToken } = useAuth();\n\n  // const url = window.location.href;\n  useEffect(() => {\n    console.log(\"is logged: \", isLogged);\n    const tkn = localStorage.getItem(\"accessToken\");\n    if (tkn) {\n      dispatch(logIn());\n    }\n  }, []);\n  // useEffect(() => {\n  //   console.log(\"mudou rota: \", url);\n  //   const hasCode = url.includes(\"?code=\");\n\n  //   if (hasCode) {\n  //     setIsLogged(true);\n  //     let urlLength = url.lengtht;\n  //     let index = url.indexOf(\"=\") + 1;\n  //     let code = url.slice(index, urlLength);\n  //     // getUserToken(code);\n  //   }\n  // }, [url]);\n\n  return (\n    <ThemeProvider theme={currentTheme}>\n      <div className=\"App\">\n        {!isLogged && <Login />}\n        {isLogged && (\n          <>\n            <Navbar email={userEmail} />\n            <BrowserRouter>\n              <Switch>\n                <Route path=\"/\" exact={true} component={Home} />\n                <Route path=\"/detail\" component={ComicDetail} />\n                {/* <Route path=\"*\"  component={404} /> */}\n              </Switch>\n            </BrowserRouter>\n          </>\n        )}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../redux/comic/comicSlice\";\nimport userReducer from \"../redux/user/userSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    comic: counterReducer,\n    user: userReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}