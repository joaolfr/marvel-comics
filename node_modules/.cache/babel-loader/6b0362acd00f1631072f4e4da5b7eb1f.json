{"ast":null,"code":"import _regeneratorRuntime from\"/Users/joaoluiz/Documents/workspace/ReactJs/marvel-comics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/joaoluiz/Documents/workspace/ReactJs/marvel-comics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/joaoluiz/Documents/workspace/ReactJs/marvel-comics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useState}from\"react\";import{useLazyFetch}from\"../../services/hooks\";import{useSelector,useDispatch}from\"react-redux\";import{setList,selectCount}from\"../../features/comic/comicSlice\";// gateway.marvel.com/v1/public/comics?ts=1&apikey=2bc06882395b9339500cb01b1dfcbb6b&hash=5960290765b89d76491c34ed7f44521e\nexport default(function(){var comic=useSelector(selectCount);var dispatch=useDispatch();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),marvelComics=_useState2[0],setMarvelComics=_useState2[1];var _useLazyFetch=useLazyFetch({url:\"/comics?ts=1&apikey=2bc06882395b9339500cb01b1dfcbb6b&hash=5960290765b89d76491c34ed7f44521e\",method:\"GET\"}),_useLazyFetch2=_slicedToArray(_useLazyFetch,2),searchComics=_useLazyFetch2[0],_useLazyFetch2$=_useLazyFetch2[1],loading=_useLazyFetch2$.loading,error=_useLazyFetch2$.error;var getComics=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return searchComics();case 3:data=_context.sent;if(data){console.log(\"dados marvel: \",data.data.results);setMarvelComics(data.data.results);dispatch(setList(data.data.results));}_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);})),[]);return{getComics:getComics,loading:loading,marvelComics:marvelComics};});","map":{"version":3,"sources":["/Users/joaoluiz/Documents/workspace/ReactJs/marvel-comics/src/screens/home/hooks.js"],"names":["useCallback","useState","useLazyFetch","useSelector","useDispatch","setList","selectCount","comic","dispatch","marvelComics","setMarvelComics","url","method","searchComics","loading","error","getComics","data","console","log","results"],"mappings":"6gBAAA,OAASA,WAAT,CAAsBC,QAAtB,KAAsC,OAAtC,CACA,OAASC,YAAT,KAA6B,sBAA7B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,OAAT,CAAkBC,WAAlB,KAAqC,iCAArC,CACA;AAEA,eAAe,UAAM,CACnB,GAAMC,CAAAA,KAAK,CAAGJ,WAAW,CAACG,WAAD,CAAzB,CACA,GAAME,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CAFmB,cAGqBH,QAAQ,CAAC,EAAD,CAH7B,wCAGZQ,YAHY,eAGEC,eAHF,iCAIwBR,YAAY,CAAC,CACtDS,GAAG,6FADmD,CAEtDC,MAAM,CAAE,KAF8C,CAAD,CAJpC,gDAIZC,YAJY,qDAIIC,OAJJ,iBAIIA,OAJJ,CAIaC,KAJb,iBAIaA,KAJb,CASnB,GAAMC,CAAAA,SAAS,CAAGhB,WAAW,sEAAC,kLAEPa,CAAAA,YAAY,EAFL,QAEpBI,IAFoB,eAI1B,GAAIA,IAAJ,CAAU,CACRC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BF,IAAI,CAACA,IAAL,CAAUG,OAAxC,EACAV,eAAe,CAACO,IAAI,CAACA,IAAL,CAAUG,OAAX,CAAf,CACAZ,QAAQ,CAACH,OAAO,CAACY,IAAI,CAACA,IAAL,CAAUG,OAAX,CAAR,CAAR,CACD,CARyB,+EAU1BF,OAAO,CAACC,GAAR,cAV0B,oEAAD,GAY1B,EAZ0B,CAA7B,CAcA,MAAO,CAAEH,SAAS,CAATA,SAAF,CAAaF,OAAO,CAAPA,OAAb,CAAsBL,YAAY,CAAZA,YAAtB,CAAP,CACD,CAxBD","sourcesContent":["import { useCallback, useState } from \"react\";\nimport { useLazyFetch } from \"../../services/hooks\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setList, selectCount } from \"../../features/comic/comicSlice\";\n// gateway.marvel.com/v1/public/comics?ts=1&apikey=2bc06882395b9339500cb01b1dfcbb6b&hash=5960290765b89d76491c34ed7f44521e\n\nexport default () => {\n  const comic = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [marvelComics, setMarvelComics] = useState([]);\n  const [searchComics, { loading, error }] = useLazyFetch({\n    url: `/comics?ts=1&apikey=2bc06882395b9339500cb01b1dfcbb6b&hash=5960290765b89d76491c34ed7f44521e`,\n    method: \"GET\",\n  });\n\n  const getComics = useCallback(async () => {\n    try {\n      const data = await searchComics();\n\n      if (data) {\n        console.log(\"dados marvel: \", data.data.results);\n        setMarvelComics(data.data.results);\n        dispatch(setList(data.data.results));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  return { getComics, loading, marvelComics };\n};\n"]},"metadata":{},"sourceType":"module"}