{"ast":null,"code":"import _regeneratorRuntime from\"/Users/joaoluiz/Documents/workspace/ReactJs/marvel-comics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/joaoluiz/Documents/workspace/ReactJs/marvel-comics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/joaoluiz/Documents/workspace/ReactJs/marvel-comics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/joaoluiz/Documents/workspace/ReactJs/marvel-comics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useState}from\"react\";import API from\"../api\";export default(function(){var config=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];// console.log('config: ', config)\nvar fetch=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var options,response,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:options=_args.length>0&&_args[0]!==undefined?_args[0]:{};// console.log('option : ', { ...config, ...options })\nconsole.log(\"config : \",config);_context.prev=2;setLoading(true);setData(null);_context.next=7;return API.request(_objectSpread(_objectSpread({},config),options));case 7:response=_context.sent;setLoading(false);setData(response.data);console.log(\"response: \",response.data);return _context.abrupt(\"return\",response.data);case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);console.log(\"erros: \",_context.t0);console.log(\"erro conf: \",config);setLoading(false);setError(_context.t0);// setError(null)\ncase 20:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);})),[config]);return[fetch,{loading:loading,data:data,error:error}];});","map":{"version":3,"sources":["/Users/joaoluiz/Documents/workspace/ReactJs/marvel-comics/src/services/hooks/useLazyFetch.js"],"names":["useCallback","useState","API","config","loading","setLoading","data","setData","error","setError","fetch","options","console","log","request","response"],"mappings":"4rBAAA,OAASA,WAAT,CAAsBC,QAAtB,KAAsC,OAAtC,CACA,MAAOC,CAAAA,GAAP,KAAgB,QAAhB,CAEA,eAAe,UAAiB,IAAhBC,CAAAA,MAAgB,2DAAP,EAAO,eACAF,QAAQ,CAAC,KAAD,CADR,wCACvBG,OADuB,eACdC,UADc,8BAENJ,QAAQ,CAAC,IAAD,CAFF,yCAEvBK,IAFuB,eAEjBC,OAFiB,8BAGJN,QAAQ,CAAC,IAAD,CAHJ,yCAGvBO,KAHuB,eAGhBC,QAHgB,eAI9B;AAEA,GAAMC,CAAAA,KAAK,CAAGV,WAAW,sEACvB,wKAAOW,OAAP,+CAAiB,EAAjB,CACE;AACAC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBV,MAAzB,EAFF,gBAKIE,UAAU,CAAC,IAAD,CAAV,CACAE,OAAO,CAAC,IAAD,CAAP,CANJ,sBAQ2BL,CAAAA,GAAG,CAACY,OAAJ,gCAAiBX,MAAjB,EAA4BQ,OAA5B,EAR3B,QAQUI,QARV,eASIV,UAAU,CAAC,KAAD,CAAV,CACAE,OAAO,CAACQ,QAAQ,CAACT,IAAV,CAAP,CACAM,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BE,QAAQ,CAACT,IAAnC,EAXJ,gCAaWS,QAAQ,CAACT,IAbpB,4DAeIM,OAAO,CAACC,GAAR,CAAY,SAAZ,cACAD,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2BV,MAA3B,EACAE,UAAU,CAAC,KAAD,CAAV,CACAI,QAAQ,aAAR,CACA;AAnBJ,qEADuB,GAuBvB,CAACN,MAAD,CAvBuB,CAAzB,CA0BA,MAAO,CACLO,KADK,CAEL,CACEN,OAAO,CAAPA,OADF,CAEEE,IAAI,CAAJA,IAFF,CAGEE,KAAK,CAALA,KAHF,CAFK,CAAP,CAQD,CAxCD","sourcesContent":["import { useCallback, useState } from \"react\";\nimport API from \"../api\";\n\nexport default (config = {}) => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  // console.log('config: ', config)\n\n  const fetch = useCallback(\n    async (options = {}) => {\n      // console.log('option : ', { ...config, ...options })\n      console.log(\"config : \", config);\n\n      try {\n        setLoading(true);\n        setData(null);\n\n        const response = await API.request({ ...config, ...options });\n        setLoading(false);\n        setData(response.data);\n        console.log(\"response: \", response.data);\n\n        return response.data;\n      } catch (er) {\n        console.log(\"erros: \", er);\n        console.log(\"erro conf: \", config);\n        setLoading(false);\n        setError(er);\n        // setError(null)\n      }\n    },\n    [config]\n  );\n\n  return [\n    fetch,\n    {\n      loading,\n      data,\n      error,\n    },\n  ];\n};\n"]},"metadata":{},"sourceType":"module"}