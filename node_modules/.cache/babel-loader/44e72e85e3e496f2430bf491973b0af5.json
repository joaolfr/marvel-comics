{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport API from \"../api\";\nexport default _s((config = {}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null); // console.log('config: ', config)\n\n  const fetch = useCallback(async (options = {}) => {\n    // console.log('option : ', { ...config, ...options })\n    console.log(\"config : \", config);\n\n    try {\n      setLoading(true);\n      setData(null);\n      const response = await API.request({ ...config,\n        ...options\n      });\n      setLoading(false);\n      setData(response.data);\n      console.log(\"response: \", response.data);\n      return response.data;\n    } catch (er) {\n      console.log(\"erros: \", er);\n      console.log(\"erro conf: \", config);\n      setLoading(false);\n      setError(er); // setError(null)\n    }\n  }, [config]);\n  return [fetch, {\n    loading,\n    data,\n    error\n  }];\n}, \"BzpkyGsJQQmtHKkw5IWFcBavXVM=\");","map":{"version":3,"sources":["/Users/joaoluiz/Documents/workspace/ReactJs/marvel-comics/src/services/hooks/useLazyFetch.js"],"names":["useCallback","useState","API","config","loading","setLoading","data","setData","error","setError","fetch","options","console","log","response","request","er"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,kBAAe,CAACC,MAAM,GAAG,EAAV,KAAiB;AAAA;;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC,CAH8B,CAI9B;;AAEA,QAAMS,KAAK,GAAGV,WAAW,CACvB,OAAOW,OAAO,GAAG,EAAjB,KAAwB;AACtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBV,MAAzB;;AAEA,QAAI;AACFE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,OAAO,CAAC,IAAD,CAAP;AAEA,YAAMO,QAAQ,GAAG,MAAMZ,GAAG,CAACa,OAAJ,CAAY,EAAE,GAAGZ,MAAL;AAAa,WAAGQ;AAAhB,OAAZ,CAAvB;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,OAAO,CAACO,QAAQ,CAACR,IAAV,CAAP;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,QAAQ,CAACR,IAAnC;AAEA,aAAOQ,QAAQ,CAACR,IAAhB;AACD,KAVD,CAUE,OAAOU,EAAP,EAAW;AACXJ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBG,EAAvB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BV,MAA3B;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,QAAQ,CAACO,EAAD,CAAR,CAJW,CAKX;AACD;AACF,GAtBsB,EAuBvB,CAACb,MAAD,CAvBuB,CAAzB;AA0BA,SAAO,CACLO,KADK,EAEL;AACEN,IAAAA,OADF;AAEEE,IAAAA,IAFF;AAGEE,IAAAA;AAHF,GAFK,CAAP;AAQD,CAxCD","sourcesContent":["import { useCallback, useState } from \"react\";\nimport API from \"../api\";\n\nexport default (config = {}) => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  // console.log('config: ', config)\n\n  const fetch = useCallback(\n    async (options = {}) => {\n      // console.log('option : ', { ...config, ...options })\n      console.log(\"config : \", config);\n\n      try {\n        setLoading(true);\n        setData(null);\n\n        const response = await API.request({ ...config, ...options });\n        setLoading(false);\n        setData(response.data);\n        console.log(\"response: \", response.data);\n\n        return response.data;\n      } catch (er) {\n        console.log(\"erros: \", er);\n        console.log(\"erro conf: \", config);\n        setLoading(false);\n        setError(er);\n        // setError(null)\n      }\n    },\n    [config]\n  );\n\n  return [\n    fetch,\n    {\n      loading,\n      data,\n      error,\n    },\n  ];\n};\n"]},"metadata":{},"sourceType":"module"}